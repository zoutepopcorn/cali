Install Desktop environment*

the simple way with:

yaourt -Sy gnome gnome-tweak-tool gnome-terminal-transparency

--------------------------------------------------------------------------------

OR (manually, if specific drivers are needed):
(sorry for the mess, these are just notes ...)

- install XORG display server
- install graphics driver
- install display manager

- install XORG display server
(https://wiki.archlinux.org/index.php/Xorg)

- (dell xps 13 & asus ux501j & asusbak)
yaourt -Sy xf86-input-libinput xorg-server xorg-xinit mesa


        (surface pro 4)
        pacman -Sy xf86-input-libinput xorg-server xorg-xinit

- install graphics driver
#determine graphics driver hardware
lspci
#intel
yaourt -Sy xf86-video-intel lib32-intel-dri lib32-mesa lib32-libgl (dell xps 13, archbak(not confirmed))
(surface pro 4)

pacman -Sy xf86-video-intel mesa-libgl (lib32-mesa-libgl)

>>>>>> yaourt -Sy xf86-input-libinput xorg-server xorg-xinit mesa
>>>>>          xf86-video-intel mesa-libgl 
>>>>>>		gnome gnome-tweak-tool
>>>>>> vbx

          #nvidia (native)
         pacman -Sy nvidia lib32-nvidia-libgl nvidia-utils lib32-nvidia-utils (asus ux501j, archbak(not confirmed))

         #nvidia (opensource nouveau)
         pacman -Sy nouveau ...

- install display manager (login manager)

          (https://wiki.archlinux.org/index.php/Display_manager)

         GNOME
yaourt - Sy gnome gnome-tweak-tool

OR
         pacman -Sy gdm gnome-shell gnome-shell-extensions gnome-control-center gnome-terminal gnome-system-monitor                     gnome-tweak-tool nautilus

          same for surface

GDM
sudo systemctl enable gdm
(created symlink)

or (security through obscurity):
sudo systemctl start gdm

for other video cards try:
AMD     xf86-video-amdgpu
Intel     xf86-video-intel
Nvidia     xf86-video-nouveau
as fallback     xf86-video-vesa

*https://wiki.archlinux.org/index.php/Desktop_environment

#Activate bluetooth
sudo systemctl start bluetooth

---------------------------------------------------------------------------------

suckless dwm
----------------
yaourt -Sy xorg xorg-xinit xterm dwm st dmenu slock
echo 'xrandr --output eDP1 --scale 0.6x0.6' > ~/.xinitrc
echo 'exec dwm' > ~/.xinitrc

# install inconsolata:
pacman -Sy ttf-inconsolata
# it installs to: /usr/share/fonts/TTF
# check if installed
fc-list | grep -i inconsolata
... further steps needed

# backlight
xbacklight -set 75
xbacklight -inc 5
xbacklight -dec 5

# headphones:
yay alsa-utils
alsactl restore

#audio volume:
# set volume with amixer
amixer set Master [0-65536]
# volume up
amixer set Master playback 5000+ unmute
# volume down
amixer set Master playback 5000- unmute
# volume up
amixer set Master playback 5%+ unmute
# volume down
amixer set Master playback 5%- unmute
# toggle mute
amixer set Master playback toggle
# mute
amixer set Master playback mute
# unmute
amixer set Master playback unmute

""
I use xbindkeys with my dedicated volume buttons to control the volume level.

Create the file with gedit (or other text editor): /home/~/.xbindkeys.scm

(xbindkey '("XF86AudioRaiseVolume") "amixer set Master 2dB+ unmute")
(xbindkey '("XF86AudioLowerVolume") "amixer set Master 2dB- unmute")
You need to see what keysym Fn + up-arrow and Fn + down-arrow produce with xev.
You can change it if need be (if they don't currently produce
XF86AudioRaiseVolume and XF86AudioLowerVolume) with /home/~/.xmodmap.
""

# update statusbar with
# time
# Statusbar loop
while true; do
   xsetroot -name "$( date +"%a %d %H:%M" )"
   sleep 1m    # Update time every minute
done &

# conky
(conky | while read LINE; do xsetroot -name "$LINE"; done) &
